{
  "openapi": "3.0.0",
  "info": {
    "title": "Invoices remember API",
    "description": "This API could be used to CRUD users, customer and invoices",
    "contact": {
      "name": "Support",
      "email": "lucasmarchesoni620@gmail.com"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "users",
      "description": "User Routes"
    },
    {
      "name": "customers",
      "description": "Customer Routes"
    },
    {
      "name": "invoices",
      "description": "Invoice Routes"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["users"],
        "description": "Create a new user",
        "requestBody": {
          "description": "Information required to create a user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "500": {
            "description": "User not created"
          }
        }
      },
      "get": {
        "tags": ["users"],
        "description": "Get all users",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "tags": ["users"],
        "description": "Get user by email",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Get user by email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "500": {
            "description": "User not exists!"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "description": "Update user",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "requestBody": {
          "description": "Information required to update a user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "500": {
            "description": "User not exists!"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "description": "Delete user",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          },
          "500": {
            "description": "User not exists!"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "description": "Login",
        "requestBody": {
          "description": "Login to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLogin"
                }
              }
            }
          },
          "500": {
            "description": "User or password incorrect!"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "tags": ["users"],
        "description": "Refresh Token",
        "requestBody": {
          "description": "Update refresh token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRefreshToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New token created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRefreshToken"
                }
              }
            }
          },
          "500": {
            "description": "Invalid Refresh Token!"
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": ["customers"],
        "description": "Create a new customer",
        "requestBody": {
          "description": "Information required to create a customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCustomer"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomer"
                }
              }
            }
          },
          "500": {
            "description": "Customer not created"
          }
        }
      },
      "get": {
        "tags": ["customers"],
        "description": "Get all customers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCustomer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": ["customers"],
        "description": "Get customer by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the customer",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Get customer by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomer"
                }
              }
            }
          },
          "500": {
            "description": "Customer not exists!"
          }
        }
      },
      "put": {
        "tags": ["customers"],
        "description": "Update customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the customer",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "requestBody": {
          "description": "Information required to update a customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCustomer"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Update Customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomer"
                }
              }
            }
          },
          "500": {
            "description": "Customer not found!"
          }
        }
      },
      "delete": {
        "tags": ["customers"],
        "description": "Delete customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the customer",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Delete customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomer"
                }
              }
            }
          },
          "500": {
            "description": "Customer not exists!"
          }
        }
      }
    },
    "/invoices": {
      "post": {
        "tags": ["invoices"],
        "description": "Create a new invoice",
        "requestBody": {
          "description": "Information required to create a invoice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoice"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Invoice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoice"
                }
              }
            }
          },
          "500": {
            "description": "Invoice not created"
          }
        }
      },
      "get": {
        "tags": ["invoices"],
        "description": "Get all invoices",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": ["invoices"],
        "description": "Get invoice by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the invoice",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Get invoice by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoice"
                }
              }
            }
          },
          "500": {
            "description": "Invoice not exists!"
          }
        }
      },
      "put": {
        "tags": ["invoices"],
        "description": "Update invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the invoice",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "requestBody": {
          "description": "Information required to update a invoice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoice"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Update invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoice"
                }
              }
            }
          },
          "500": {
            "description": "Invoice not found!"
          }
        }
      },
      "delete": {
        "tags": ["invoices"],
        "description": "Delete invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the invoice",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Delete invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoice"
                }
              }
            }
          },
          "500": {
            "description": "Invoice not exists!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestUser": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name of the user",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Doe"
          },
          "birth_date": {
            "type": "string",
            "description": "Birth date name of the user",
            "example": "2000-01-01"
          },
          "cep": {
            "type": "string",
            "description": "Cep of the user",
            "example": "00000000"
          },
          "address": {
            "type": "string",
            "description": "Address of the user",
            "example": "Street Example"
          },
          "city": {
            "type": "string",
            "description": "City of the user",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF of the user",
            "example": "SP"
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "test123"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "birth_date",
          "cep",
          "address",
          "city",
          "uf",
          "email",
          "password"
        ]
      },
      "ResponseUser": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name of the user",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Doe"
          },
          "birth_date": {
            "type": "string",
            "description": "Birth date name of the user",
            "example": "2000-01-01"
          },
          "cep": {
            "type": "string",
            "description": "Cep of the user",
            "example": "00000000"
          },
          "address": {
            "type": "string",
            "description": "Address of the user",
            "example": "Street Example"
          },
          "city": {
            "type": "string",
            "description": "City of the user",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF of the user",
            "example": "SP"
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "test123"
          },
          "id": {
            "type": "string",
            "description": "Id of the user",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "description": "Creation datetime of the user",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Update datetime of the user",
            "format": "date-time"
          }
        }
      },
      "RequestLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "test123"
          }
        },
        "required": ["email", "password"]
      },
      "ResponseLogin": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token",
            "example": "asfisahfisafoafsjisfa"
          },
          "refreshToken": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Id of the refresh token",
                "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
              },
              "expiresIn": {
                "type": "string",
                "description": "Time to expires the refresh token",
                "example": "1688492862"
              },
              "userId": {
                "type": "string",
                "description": "Id of the refresh token",
                "example": "12739832-0484-4fb5-8314-744a16ca85b1"
              }
            }
          }
        }
      },
      "RequestRefreshToken": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "Id of the refresh token",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          }
        },
        "required": ["refresh_token"]
      },
      "ResponseRefreshToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Id of the refresh token",
            "example": "asfisahfisafoafsjisfa"
          }
        }
      },
      "RequestCustomer": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name of the customer",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the customer",
            "example": "Doe"
          },
          "cep": {
            "type": "string",
            "description": "Cep of the customer",
            "example": "00000000"
          },
          "address": {
            "type": "string",
            "description": "Address of the customer",
            "example": "Street Example"
          },
          "city": {
            "type": "string",
            "description": "City of the customer",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF of the customer",
            "example": "SP"
          },
          "email": {
            "type": "string",
            "description": "Email of the customer",
            "example": "johndoe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Phone of the customer",
            "example": "11911111111"
          },
          "userId": {
            "type": "string",
            "description": "Id of the user",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "birth_date",
          "cep",
          "address",
          "city",
          "uf",
          "email",
          "phone",
          "userId"
        ]
      },
      "ResponseCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the customer",
            "format": "uuid"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the customer",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the customer",
            "example": "Doe"
          },
          "cep": {
            "type": "string",
            "description": "Cep of the customer",
            "example": "00000000"
          },
          "address": {
            "type": "string",
            "description": "Address of the customer",
            "example": "Street Example"
          },
          "city": {
            "type": "string",
            "description": "City of the customer",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF of the customer",
            "example": "SP"
          },
          "email": {
            "type": "string",
            "description": "Email of the customer",
            "example": "johndoe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Phone of the customer",
            "example": "11911111111"
          },
          "userId": {
            "type": "string",
            "description": "Id of the user",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          },
          "created_at": {
            "type": "string",
            "description": "Creation datetime of the customer",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Update datetime of the customer",
            "format": "date-time"
          }
        }
      },
      "RequestInvoice": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the invoice",
            "example": "example"
          },
          "value": {
            "type": "number",
            "description": "Value of the invoice",
            "example": 50
          },
          "payment_method": {
            "type": "string",
            "description": "Method of payment",
            "example": "PIX"
          },
          "due_date": {
            "type": "string",
            "description": "Due date of payment",
            "example": "PIX"
          },
          "is_paid": {
            "type": "boolean",
            "description": "Is paid or no",
            "example": true
          },
          "userId": {
            "type": "string",
            "description": "Id of the user",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          },
          "customerId": {
            "type": "string",
            "description": "Id of the customer",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          }
        },
        "required": [
          "description",
          "value",
          "payment_method",
          "due_date",
          "is_paid",
          "userId",
          "customerId"
        ]
      },
      "ResponseInvoice": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the invoice",
            "example": "example"
          },
          "value": {
            "type": "number",
            "description": "Value of the invoice",
            "example": 50
          },
          "payment_method": {
            "type": "string",
            "description": "Method of payment",
            "example": "PIX"
          },
          "due_date": {
            "type": "string",
            "description": "Due date of payment",
            "example": "PIX"
          },
          "is_paid": {
            "type": "boolean",
            "description": "Is paid or no",
            "example": true
          },
          "userId": {
            "type": "string",
            "description": "Id of the user",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          },
          "customerId": {
            "type": "string",
            "description": "Id of the customer",
            "example": "f9a3d9a3-fa60-4fdb-8753-d96ab18aa66f"
          },
          "created_at": {
            "type": "string",
            "description": "Creation datetime of the invoice",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Update datetime of the invoice",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "description": "JWT Token authentication",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
